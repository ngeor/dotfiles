# Inspired by https://github.com/Haacked/dotfiles/blob/master/git/.gitconfig.aliases
#
# Include this in your own .gitconfig by using the
# [include] directive with the path to this file
#
# [include]
#    path = ~/.gitconfig_include
#
# If you don't have any existing includes, you can add this via the following command
#
#   git config --global include.path ~/.gitconfig_include
#

[alias]
    ec = config --global -e
    #
    # Start a new branch
    #
    co = checkout
    cob = checkout -b
    default = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
    #
    #
    # Working in a branch
    #
    up = !git pull --rebase --prune
    amend = commit --amend
    # add all changes, amend existing commit, push force with lease
    pf = push --force-with-lease
    wip = "!f() { git commit -a --amend --no-edit && git pf; }; f"
    #
    # Clean up
    #
    # Deletes all branches merged into the specified branch (or the default branch if no branch is specified)
    bclean = "!f() { DEFAULT=$(git default); git branch --merged ${1-$DEFAULT} | grep -v " ${1-$DEFAULT}$" | xargs git branch -d; return 0; }; f"
    # Switches to specified branch (or the dafult branch if no branch is specified), runs git up, then runs bclean.
    bdone = "!f() { DEFAULT=$(git default); git checkout ${1-$DEFAULT} && git up && git bclean ${1-$DEFAULT}; }; f"
    # wipe out everything and get master
    nuke = !git reset HEAD --hard && git clean -dfx && git bdone
[filter "clang-format-java"]
    clean = clang-format -assume-filename=test.java
    smudge = cat
[filter "gpg"]
    clean = gpg -q -e -r git -a
    smudge = gpg -d -q
